import type { ProductAnalytics } from '../../types/index'

import { formatPrice, formatPriceOrStatus } from '../../utils/formatting'

/**
 * Formats messages for Telegram
 */
export class TelegramFormatter {
  static readonly ITEM_SEPARATOR = ''

  /**
   * Format multiple analytics messages as a single message
   */
  formatMessage(messages: string[], index: number): string {
    return index === 0
      ? `${TelegramFormatter.ITEM_SEPARATOR}\n${messages.join('')}`
      : messages.join('')
  }

  /**
   * Format price change as a percentage
   */
  formatPriceChange(change: number): string {
    const absChange = Math.abs(change)
    if (change === 0) {
      return '0%'
    }

    return change > 0 ? `+${absChange}%` : `-${absChange}%`
  }

  /**
   * Format a product analytics message
   */
  formatAnalyticsMessage(analytics: ProductAnalytics): string {
    const { id, name, price: currentPrice, url } = analytics.current
    const { price: minPrice } = analytics.minPrice
    const { price: maxPrice } = analytics.maxPrice
    const { price: medianPrice } = analytics.medianPrice

    const trend = this.getPriceTrendSymbol(analytics.discountFromMedianPercent)
    const priceChangeFormatted = this.formatPriceChange(analytics.discountFromMedianPercent)

    // Extract product name, providing a fallback for empty names
    const [rawProductName] = name.split(',')
    const productName = rawProductName?.trim()
      ? rawProductName
      : '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è' // Fallback name: "Product without a name"

    // Status indicators
    let statusIndicator = ''
    let priceDisplay = ''
    let trendDisplay = ''
    let additionalInfo = ''

    const { becameAvailable, becameUnavailable, cameBackInStock, current, wasEverInStock } = analytics
    // Check if product is in stock
    if (!current.inStock) {
      // Product is not in stock
      statusIndicator = 'üö´' // Always show unavailable indicator

      // Use the new formatting function for price display
      priceDisplay = `<b>${formatPriceOrStatus(currentPrice, false, wasEverInStock)}</b>`

      trendDisplay = '' // Don't show trend for unavailable products
    }
    else {
      // Product is in stock
      priceDisplay = `<b>${formatPrice(currentPrice)}</b>`
      trendDisplay = `<code>${trend} ${priceChangeFormatted}</code> –æ—Ç –º–µ–¥–∏–∞–Ω—ã`

      // Special case for products that came back in stock
      if (cameBackInStock) {
        statusIndicator = 'üîÑ' // Product came back in stock
        additionalInfo = '<i>–¢–æ–≤–∞—Ä —Å–Ω–æ–≤–∞ –≤ –Ω–∞–ª–∏—á–∏–∏!</i>'
      }
      else if (becameAvailable && !wasEverInStock) {
        statusIndicator = 'üÜï' // Product available for the first time
        additionalInfo = '<i>–¢–æ–≤–∞—Ä –≤–ø–µ—Ä–≤—ã–µ –≤ –Ω–∞–ª–∏—á–∏–∏!</i>'
      }
      else if (becameAvailable) {
        statusIndicator = 'üì¶' // Recently became available
      }
    }

    // Handle status change indicators (append to existing indicators)
    if (becameUnavailable) {
      statusIndicator += 'üö´' // Recently became unavailable
    }
    else if (becameAvailable && !statusIndicator.includes('üì¶')
      && !statusIndicator.includes('üîÑ') && !statusIndicator.includes('üÜï')) {
      statusIndicator += 'üì¶' // Recently became available
    }

    // Only show history statistics if the product was ever in stock
    const historyStats = wasEverInStock || current.inStock
      ? `üìâ Min/Med/Max: <code>${formatPrice(minPrice, true)}/${formatPrice(medianPrice, true)}/${formatPrice(maxPrice, true)}</code>`
      : ''

    // Add product ID in case name is missing (helps with identification)
    const productIdDisplay = !rawProductName?.trim() ? `(ID: ${id})` : ''

    return `
${statusIndicator}<b>${productName}</b> ${productIdDisplay}
üí∞ ${priceDisplay} 
${additionalInfo ? `${additionalInfo}\n` : ''}${current.inStock ? `üìä ${trendDisplay}\n` : ''}${historyStats}
<a href="${url}">–û—Ç–∫—Ä—ã—Ç—å –≤ Ozon ‚Üí</a>
${TelegramFormatter.ITEM_SEPARATOR}`
  }

  /**
   * Get a symbol representing price trend direction
   */
  private getPriceTrendSymbol(priceDiff: number): string {
    if (priceDiff === 0) {
      return '‚Üí'
    }

    return priceDiff > 0 ? '‚Üë' : '‚Üì'
  }

  /**
   * Format a welcome message for a new user
   */
  formatWelcomeMessage(userId: string): string {
    const activateCommand = `/activate ${userId}`

    return [
      '*üîç –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OZON-TRACKER!*',
      '',
      '–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã –≤ Ozon –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö.',
      '',
      `–í–∞—à ID: \`${userId}\``,
      '',
      '*–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:*',
      '1. –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      '2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏:',
      `   \`${activateCommand}\``,
      '',
      '*–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ:*',
      '‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ Ozon',
      '‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω',
      '‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –∏ –ø–æ—Ä–æ–≥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
      '‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω',
      '',
      '–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /help',
    ].join('\n')
  }

  /**
   * Format a user activation success message
   */
  formatActivationSuccessMessage(): string {
    return [
      '‚úÖ *–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!*',
      '',
      '*–ö–∞–∫ –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω:*',
      '1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞ Ozon',
      '2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" —Å–æ —Å–ø–∏—Å–∫–æ–º',
      '3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É (—Ñ–æ—Ä–º–∞—Ç: ozon.ru/t/XXXXXX)',
      '4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/addlist [—Å—Å—ã–ª–∫–∞]`',
      '',
      '*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*',
      'üìã */getall* - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã',
      'üìä */report* - –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π',
      'üîî */setthreshold 10* - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Ä–æ–≥ —Å–∫–∏–¥–∫–∏ (10%)',
      '‚è± */setfrequency daily* - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
      '‚ùå */stop* - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ',
      '',
      '*–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:*',
      '–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É —á–µ—Ä–µ–∑ */setfrequency*:',
      '‚Ä¢ immediate - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      '‚Ä¢ daily - —Ä–∞–∑ –≤ –¥–µ–Ω—å',
      '‚Ä¢ weekly - —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
      '‚Ä¢ custom 12 - –∑–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ —á–∞—Å–∞—Ö',
      '',
      '*–ü—Ä–∏–º–µ—Ä:* `/addlist https://ozon.ru/t/QweRtY`',
      '',
      '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –∏–∑ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"!',
      '–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å: /help',
    ].join('\n')
  }

  /**
   * Format help message
   */
  formatHelpMessage(): string {
    return [
      'üîç *OZON-TRACKER* - –í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—é —Ü–µ–Ω',
      '',
      '*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*',
      '/start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ',
      '/addlist URL - –î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑ Ozon',
      '/getall - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã',
      '/stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
      '/report - –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç –æ —Ç–æ–≤–∞—Ä–∞—Ö',
      '',
      '*–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:*',
      '/setthreshold –ß–ò–°–õ–û - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Ä–æ–≥ —Å–∫–∏–¥–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (0-100)',
      '–ü—Ä–∏–º–µ—Ä: `/setthreshold 10` - —É–≤–µ–¥–æ–º–ª—è—Ç—å –ø—Ä–∏ —Å–∫–∏–¥–∫–µ –æ—Ç 10%',
      '',
      '/setfrequency –¢–ò–ü [–ß–ê–°–´] - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:',
      '‚Ä¢ immediate - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      '‚Ä¢ daily - –Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å',
      '‚Ä¢ weekly - –Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é',
      '‚Ä¢ custom –ß–ê–°–´ - —É–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ —á–∞—Å–∞—Ö',
      '–ü—Ä–∏–º–µ—Ä: `/setfrequency custom 12`',
      '',
      '*–í–∞–∂–Ω–æ:* –í—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏:',
      '‚Ä¢ –¢–æ–≤–∞—Ä —Å—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω/–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      '‚Ä¢ –°–∫–∏–¥–∫–∞ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      '',
      '*–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:*',
      '/getid - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID –≤ Telegram',
      '/activate ID - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      '',
      '*–°–æ–≤–µ—Ç—ã:*',
      '‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ —Å–∫–∏–¥–∫–∏: 15-30%',
      '‚Ä¢ –î–ª—è –º–∏–Ω–∏–º—É–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ weekly',
      '‚Ä¢ –°–∫–∏–¥–∫–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –º–µ–¥–∏–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã',
      '‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—Ç—á–µ—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /report',
    ].join('\n')
  }
}
